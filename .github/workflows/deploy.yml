# github repo actions display name
name: deploy crawler by github actions and docker

# event trigger
on:
  push:
    branches: ["main"]
jobs:
  run-test:
    runs-on: ubuntu-latest
    steps: 
      - 
        uses: actions/checkout@v3
      
      - 
        name: Setup Python
        uses: actions/setup-python@v3
        with: 
          python-version: "3.9"
        # run: pip install -r requirements.txt

  build-image:
    needs: run-test
    runs-on: ubuntu-latest
    steps:
    - 
        uses: actions/checkout@v3
        
      - 
        name: Setup Docker QEMU
        uses: docker/setup-qemu-action@v3
      
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - 
        name: Generate Enviroment properties file
        run:  |
          touch ./application-secret.yaml
          echo "${{ secrets.APPLICATION_PROPERTIES }}" >> ./application-secret.yaml

      - 
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/knou-notice-crawler:latest
      
      - 
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  cd-pipeline:
    needs: build-image
    name: continuos deploy
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@master
      - 
        name: Copy file via ssh password
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml"
          target: ${{ secrets.TARGET }}
      - 
        name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: "cd ${{ secrets.TARGET }} && docker compose pull && docker compose up -d"




